// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/drawiin/go-orders-service/internal/entity"
	"github.com/drawiin/go-orders-service/internal/event"
	"github.com/drawiin/go-orders-service/internal/infra/db"
	"github.com/drawiin/go-orders-service/internal/infra/repository"
	"github.com/drawiin/go-orders-service/internal/infra/web/web_handler"
	"github.com/drawiin/go-orders-service/internal/usecase"
	"github.com/drawiin/go-orders-service/pkg/events"
	"github.com/google/wire"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func NewCreateOrderUseCase(db2 db.DBTX) *usecase.CreateOrderUseCase {
	queries := db.New(db2)
	orderRepository := repository.NewOrderRepository(queries)
	orderCreated := event.NewOrderCreated()
	eventDispatcher := events.NewEventDispatcher()
	createOrderUseCase := usecase.NewCreateOrderUseCase(orderRepository, orderCreated, eventDispatcher)
	return createOrderUseCase
}

func NewWebOrderHandler(db2 db.DBTX) *web_handler.WebOrderHandler {
	queries := db.New(db2)
	orderRepository := repository.NewOrderRepository(queries)
	orderCreated := event.NewOrderCreated()
	eventDispatcher := events.NewEventDispatcher()
	createOrderUseCase := usecase.NewCreateOrderUseCase(orderRepository, orderCreated, eventDispatcher)
	getAllOrdersUseCase := usecase.NewGetAllOrdersUseCase(orderRepository)
	getOrderByIdUseCase := usecase.NewGetOrderByIdUseCase(orderRepository)
	webOrderHandler := web_handler.NewWebOrderHandler(createOrderUseCase, getAllOrdersUseCase, getOrderByIdUseCase)
	return webOrderHandler
}

// wire.go:

var OrderRepositorySet = wire.NewSet(db.New, repository.NewOrderRepository, wire.Bind(new(entity.OrderRepositoryInterface), new(*repository.OrderRepository)))

var EventDispatcherSet = wire.NewSet(events.NewEventDispatcher, event.NewOrderCreated, wire.Bind(new(events.EventInterface), new(*event.OrderCreated)), wire.Bind(new(events.EventDispatcherInterface), new(*events.EventDispatcher)))
